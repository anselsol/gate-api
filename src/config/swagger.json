{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Solape DEX API",
        "description": "Find all the data used in the Solape DEX.",
        "license": {
            "name": "Copyright",
            "url": "https://solape.io"
        }
    },
    "host": "api.libertysquare.io",
    "basePath": "",
    "tags": [
        {
            "name": "Pairs",
            "description": "API for pairs in the Solape DEX system"
        }
    ],
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/pairs": {
            "get": {
                "tags": [
                    "Pairs"
                ],
                "summary": "Get all pairs used in Solape DEX",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Pairs"
                        }
                    }
                }
            }
        },
        "/tv/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Get a list of possible groups of symbols. A group is a set of symbols that share a common access level. Any user can have access to any number of such groups. It is required only if you use groups of symbols in order to restrict access to the instrument's data.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Groups"
                        }
                    }
                }
            }
        },
        "/tv/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get a list of symbol groups allowed for the user. It is only required if you use groups of symbols to restrict access to instrument's data.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Permissions"
                        }
                    }
                }
            }
        },
        "/tv/symbol_info": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "group",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "ID of a symbol group. If it presents then only symbols that belong to this group should be returned. Possible values are provided by the /groups endpoint. It is only required if you use groups of symbols to restrict access to instrument's data."
                    }
                ],
                "tags": [
                    "Symbol info"
                ],
                "summary": "Get a list of all instruments.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Symbols"
                        }
                    }
                }
            }
        },
        "/tv/history": {
            "get": {
                "parameters": [
                    {
                        "in": "query",
                        "name": "symbol",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Symbol name or ticker."
                    },
                    {
                        "in": "query",
                        "name": "resolution",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Symbol resolution. Possible resolutions are daily (D or 1D, 2D ... ), weekly (1W, 2W ...), monthly (1M, 2M...) and an intra-day resolution â€“ minutes(1, 2 ...)."
                    },
                    {
                        "in": "query",
                        "name": "from",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Unix timestamp (UTC) of the leftmost required bar, including from."
                    },
                    {
                        "in": "query",
                        "name": "to",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "description": "Unix timestamp (UTC) of the rightmost required bar, including to. It can be in the future. In this case, the rightmost required bar is the latest available bar."
                    }
                ],
                "tags": [
                    "History"
                ],
                "summary": "Request for history bars. Each property of the response object is treated as a table column.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/History"
                        }
                    }
                }
            }
        },
        "/tv/streaming": {
            "get": {
                "tags": [
                    "Streaming"
                ],
                "summary": "Stream of prices.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Streaming"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Groups": {
            "required": [],
            "properties": {
                "s": {
                    "type": "string",
                    "description": "Status will always be `ok`.",
                    "example": "ok"
                },
                "d": {
                    "type": "object",
                    "description": "Each element of this array is an group object.",
                    "example": {
                        "groups": [
                            {
                                "id": "solape_crypto"
                            }
                        ]
                    }
                }
            }
        },
        "Permissions": {
            "required": [],
            "properties": {
                "s": {
                    "type": "string",
                    "description": "Status will always be `ok`.",
                    "example": "ok"
                },
                "d": {
                    "type": "object",
                    "description": "Each element of this array is an group object.",
                    "example": {
                        "groups": [
                            "solape_crypto"
                        ]
                    }
                }
            }
        },
        "Symbols": {
            "required": [],
            "properties": {
                "s": {
                    "type": "string",
                    "description": "Status will always be ok.",
                    "example": "ok"
                },
                "symbol": {
                    "type": "array",
                    "description": "This is the name of the symbol - a string that the users will see. It should contain uppercase letters, numbers, a dot or an underscore. Also, it will be used for data requests if you are not using tickers.",
                    "example": [
                        "SOL/USDC"
                    ]
                },
                "description": {
                    "type": "array",
                    "description": "Description of a symbol. Will be displayed in the chart legend for this symbol.",
                    "example": [
                        "SOL/USDC pair"
                    ]
                },
                "currency": {
                    "type": "array",
                    "description": "Symbol currency, also named as counter currency. If a symbol is a currency pair, then the currency field has to contain the second currency of this pair. For example, USD is a currency for EURUSD ticker. Fiat currency must meet the ISO 4217 standard. The default value is null.",
                    "example": [
                        "USDC"
                    ]
                },
                "exchange-listed": {
                    "type": "array",
                    "description": "Short name of exchange where this symbol is listed.",
                    "example": [
                        "Solape"
                    ]
                },
                "exchange-traded": {
                    "type": "array",
                    "description": "Short name of exchange where this symbol is traded.",
                    "example": [
                        "Solape"
                    ]
                },
                "minmovement": {
                    "type": "array",
                    "description": "Minimal integer price change.",
                    "example": [
                        1
                    ]
                },
                "pricescale": {
                    "type": "array",
                    "description": "Indicates how many decimal points the price has. For example, if the price has 2 decimal points (ex., 300.01), then pricescale is 100. If it has 3 decimals, then pricescale is 1000 etc. If the price doesn't have decimals, set pricescale to 1.",
                    "example": [
                        100
                    ]
                },
                "timezone": {
                    "type": "array",
                    "description": "Timezone of the exchange for this symbol. We expect to get the name of the time zone in olsondb format.",
                    "example": [
                        "America/New_York"
                    ]
                },
                "type": {
                    "type": "array",
                    "description": "Symbol type (forex/stock etc.).",
                    "example": [
                        "crypto"
                    ]
                },
                "session-regular": {
                    "type": "array",
                    "description": "Session time format is HHMM-HHMM.",
                    "example": [
                        "24x7"
                    ]
                }
            }
        },
        "History": {
            "required": [],
            "properties": {
                "s": {
                    "type": "string",
                    "description": "Status will always be ok.",
                    "example": "ok"
                },
                "t": {
                    "type": "array",
                    "description": "Bar time, Unix timestamp (UTC). Daily bars should only have the date part, time should be 0.",
                    "example": [
                        1547942400
                    ]
                },
                "o": {
                    "type": "array",
                    "description": "Open price.",
                    "example": [
                        15.45
                    ]
                },
                "h": {
                    "type": "array",
                    "description": "High price.",
                    "example": [
                        16.43
                    ]
                },
                "l": {
                    "type": "array",
                    "description": "Low price.",
                    "example": [
                        15.45
                    ]
                },
                "c": {
                    "type": "array",
                    "description": "Close price.",
                    "example": [
                        15.11
                    ]
                },
                "v": {
                    "type": "array",
                    "description": "Volume.",
                    "example": [
                        321.24
                    ]
                }
            }
        },
        "Streaming": {
            "required": [],
            "properties": {
                "f": {
                    "type": "string",
                    "description": "Status will always be `q`.",
                    "example": "q"
                },
                "id": {
                    "type": "string",
                    "description": "Symbol.",
                    "example": "SOL/USDC"
                },
                "t": {
                    "type": "number",
                    "description": "Unix time UTC.",
                    "example": "1547942400"
                },
                "ap": {
                    "type": "number",
                    "description": "Best ask price.",
                    "example": "1.47245"
                },
                "as": {
                    "type": "array",
                    "description": "Best ask size.",
                    "example": "100"
                },
                "bp": {
                    "type": "array",
                    "description": "Best bid price.",
                    "example": "1.47245"
                },
                "v": {
                    "type": "array",
                    "description": "Best bid size.",
                    "example": "100"
                }
            }
        },
        "Pair": {
            "required": [],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of this pair.",
                    "example": "SOL/USDC"
                },
                "market_id": {
                    "type": "string",
                    "description": "The market address of this pair.",
                    "example": "SOL/USDC"
                },
                "token_base": {
                    "type": "string",
                    "description": "The base token mint address",
                    "example": "SOL9999999999999999"
                },
                "token_quote": {
                    "type": "string",
                    "description": "The quote token mint address",
                    "example": "SOL88888888888888888"
                },
                "volume_24h": {
                    "type": "number",
                    "description": "The USD volume of this pair in the last 24 hours.",
                    "example": "247389,28"
                },
                "last_price": {
                    "type": "number",
                    "description": "The price of the last trade on this pair.",
                    "example": "218,09"
                },
                "last_transaction_timestamp": {
                    "type": "number",
                    "description": "The unix timestamp of the last transaction for this pair.",
                    "example": "1637246723"
                }
            }
        },
        "Pairs": {
            "type": "array",
            "$ref": "#/definitions/Pair"
        }
    }
}